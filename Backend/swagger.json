{
  "openapi": "3.0.0",
  "info": {
    "title": "Expenses API",
    "version": "1.0.0",
    "description": "Complete API documentation for the Expenses Management System"
  },
  "servers": [{ "url": "http://localhost:4000" }],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all active users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No users found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/{userid}": {
      "get": {
        "summary": "Get user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/{userid}/update": {
      "patch": {
        "summary": "Update user details",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "timezone": {
                    "type": "string",
                    "example": "UTC"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update user"
          }
        }
      }
    },
    "/api/users/{userid}/disable": {
      "patch": {
        "summary": "Disable/Enable user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["isActive"],
                "properties": {
                  "isActive": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update user status"
          }
        }
      }
    },
    "/api/users/{userid}/delete": {
      "patch": {
        "summary": "Soft delete user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["Display"],
                "properties": {
                  "Display": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Failed to delete user"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User logged in!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/signup": {
      "post": {
        "summary": "User registration",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["first_name", "last_name", "email", "password"],
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "User already exists or validation error"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/expenses": {
      "get": {
        "summary": "Get all expenses",
        "tags": ["Expenses"],
        "responses": {
          "200": {
            "description": "List of all expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add new expense",
        "tags": ["Expenses"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "category",
                  "date",
                  "title",
                  "user",
                  "currency"
                ],
                "properties": {
                  "amount": {
                    "type": "number",
                    "example": 50.0
                  },
                  "category": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-01-15T10:30:00.000Z"
                  },
                  "title": {
                    "type": "string",
                    "example": "Lunch"
                  },
                  "user": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "203": {
            "description": "Expense created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload or user not found"
          },
          "404": {
            "description": "Category not found for user"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/expenses/{userid}": {
      "get": {
        "summary": "Get expenses by user ID",
        "tags": ["Expenses"],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "User ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/expenses/{eid}": {
      "patch": {
        "summary": "Update expense",
        "tags": ["Expenses"],
        "parameters": [
          {
            "name": "eid",
            "in": "path",
            "required": true,
            "description": "Expense ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user_id"],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  },
                  "title": {
                    "type": "string",
                    "example": "Updated Lunch"
                  },
                  "category": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  },
                  "amount": {
                    "type": "number",
                    "example": 60.0
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Expense updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized to update expense"
          },
          "404": {
            "description": "Expense or category not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete expense",
        "tags": ["Expenses"],
        "parameters": [
          {
            "name": "eid",
            "in": "path",
            "required": true,
            "description": "Expense ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expense deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Expense deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Expense or user not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/category": {
      "get": {
        "summary": "Get all categories",
        "tags": ["Categories"],
        "responses": {
          "200": {
            "description": "List of all categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/category/add": {
      "post": {
        "summary": "Add new category",
        "tags": ["Categories"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "userid"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Food"
                  },
                  "userid": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "409": {
            "description": "Category already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/category/update": {
      "patch": {
        "summary": "Update category",
        "tags": ["Categories"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "686ae1de5486c3d973702bc6"
                  },
                  "name": {
                    "type": "string",
                    "example": "Updated Food"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/timezone": {
      "get": {
        "summary": "Get all timezones",
        "tags": ["Timezones"],
        "responses": {
          "200": {
            "description": "An array of timezones.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Timezone"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new timezone",
        "tags": ["Timezones"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "value"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "India Standard Time"
                  },
                  "value": {
                    "type": "string",
                    "example": "IST"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Timezone created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "500": {
            "description": "Timezone already exists or creation failed"
          }
        }
      }
    },
    "/api/timezone/{id}/update": {
      "patch": {
        "summary": "Update an existing timezone",
        "tags": ["Timezones"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the timezone to update",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pacific Standard Time"
                  },
                  "value": {
                    "type": "string",
                    "example": "PST"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Timezone updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timezone"
                }
              }
            }
          },
          "404": {
            "description": "Timezone not found"
          },
          "500": {
            "description": "Failed to update timezone"
          }
        }
      }
    },
    "/api/timezone/{id}": {
      "delete": {
        "summary": "Delete a timezone by ID",
        "tags": ["Timezones"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "MongoDB ID of the timezone to delete",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Timezone deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Timezone deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Timezone not found"
          },
          "500": {
            "description": "Failed to delete timezone"
          }
        }
      }
    },
    "/api/currency": {
      "get": {
        "summary": "Get all currencies.",
        "tags": ["Currencies"],
        "responses": {
          "200": {
            "description": "An array of currencies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Currency"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add new currency",
        "tags": ["Currencies"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "value"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "US Dollar"
                  },
                  "value": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "500": {
            "description": "Currency already exists or creation failed"
          }
        }
      }
    },
    "/api/currency/{id}": {
      "patch": {
        "summary": "Update currency",
        "tags": ["Currencies"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Currency ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Updated US Dollar"
                  },
                  "value": {
                    "type": "string",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              }
            }
          },
          "404": {
            "description": "Currency not found"
          },
          "500": {
            "description": "Failed to update currency"
          }
        }
      },
      "delete": {
        "summary": "Delete currency",
        "tags": ["Currencies"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Currency ID",
            "schema": {
              "type": "string",
              "example": "686ae1de5486c3d973702bc6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Currency deleted."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Currency not found"
          },
          "500": {
            "description": "Cannot delete currency - expenses exist with this currency"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "isActive": {
            "type": "boolean",
            "example": true
          },
          "Display": {
            "type": "boolean",
            "example": true
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "timezone": {
            "type": "string",
            "example": "UTC"
          },
          "expense": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["686ae1de5486c3d973702bc6"]
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["686ae1de5486c3d973702bc6"]
          }
        }
      },
      "Expense": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "title": {
            "type": "string",
            "example": "Lunch"
          },
          "category": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "currency": {
            "type": "string",
            "example": "USD"
          },
          "amount": {
            "type": "number",
            "example": 50.0
          },
          "user": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "name": {
            "type": "string",
            "example": "Food"
          },
          "user": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          }
        }
      },
      "Timezone": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "name": {
            "type": "string",
            "example": "India Standard Time"
          },
          "value": {
            "type": "string",
            "example": "IST"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "686ae1de5486c3d973702bc6"
          },
          "name": {
            "type": "string",
            "example": "US Dollar"
          },
          "value": {
            "type": "string",
            "example": "USD"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          },
          "date_updated": {
            "type": "string",
            "format": "date-time",
            "example": "2025-01-15T10:30:00.000Z"
          }
        }
      }
    }
  }
}
